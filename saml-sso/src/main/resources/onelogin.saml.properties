#  If 'strict' is True, then the Java Toolkit will reject unsigned
#  or unencrypted messages if it expects them signed or encrypted
#  Also will reject the messages if not strictly follow the SAML
onelogin.saml2.strict =  false

# Enable debug mode (to print errors)
onelogin.saml2.debug =  false


## Service Provider Data that we are deploying ##

#  Identifier of the SP entity  (must be a URI)
onelogin.saml2.sp.entityid = https://samltest.timetoknow.com/saml/sso

# Specifies info about where and how the <AuthnResponse> message MUST be
# returned to the requester, in this case our SP.
# URL Location where the <Response> from the IdP will be returned
onelogin.saml2.sp.assertion_consumer_service.url = https://samltest.timetoknow.com/saml/sso

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-POST binding only
onelogin.saml2.sp.assertion_consumer_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST

# Specifies info about where and how the <Logout Response> message MUST be
# returned to the requester, in this case our SP.
onelogin.saml2.sp.single_logout_service.url = http://localhost:8080/java-saml-tookit-jspsample/sls.jsp

# SAML protocol binding to be used when returning the <LogoutResponse> or sending the <LogoutRequest>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.sp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Specifies constraints on the name identifier to be used to
# represent the requested subject.
# Take a look on core/src/main/java/com/onelogin/saml2/util/Constants.java to see the NameIdFormat supported
onelogin.saml2.sp.nameidformat = urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified

# Usually x509cert and privateKey of the SP are provided by files placed at
# the certs folder. But we can also provide them with the following parameters

onelogin.saml2.sp.x509cert =

# Requires Format PKCS#8   BEGIN PRIVATE KEY
# If you have     PKCS#1   BEGIN RSA PRIVATE KEY  convert it by   openssl pkcs8 -topk8 -inform pem -nocrypt -in sp.rsa_key -outform pem -out sp.pem
onelogin.saml2.sp.privatekey =

## Identity Provider Data that we want connect with our SP ##

# Identifier of the IdP entity  (must be a URI)
onelogin.saml2.idp.entityid = https://capriza.github.io/samling/samling.html

# SSO endpoint info of the IdP. (Authentication Request protocol)
# URL Target of the IdP where the SP will send the Authentication Request Message
onelogin.saml2.idp.single_sign_on_service.url = https://capriza.github.io/samling/samling.html

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_sign_on_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# SLO endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Request
onelogin.saml2.idp.single_logout_service.url =

# Optional SLO Response endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Response. If left blank, same URL as onelogin.saml2.idp.single_logout_service.url will be used.
# Some IdPs use a separate URL for sending a logout request and response, use this property to set the separate response url
onelogin.saml2.idp.single_logout_service.response.url =

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Public x509 certificate of the IdP
onelogin.saml2.idp.x509cert =-----BEGIN CERTIFICATE-----MIIDCTCCAnKgAwIBAgIBATANBgkqhkiG9w0BAQUFADBvMRQwEgYDVQQDEwtjYXByaXphLmNvbTELMAkGA1UEBhMCVVMxETAPBgNVBAgTCFZpcmdpbmlhMRMwEQYDVQQHEwpCbGFja3NidXJnMRAwDgYDVQQKEwdTYW1saW5nMRAwDgYDVQQLEwdTYW1saW5nMB4XDTE4MDIwMTE1MTU1M1oXDTE5MDIwMTE1MTU1M1owbzEUMBIGA1UEAxMLY2Fwcml6YS5jb20xCzAJBgNVBAYTAlVTMREwDwYDVQQIEwhWaXJnaW5pYTETMBEGA1UEBxMKQmxhY2tzYnVyZzEQMA4GA1UEChMHU2FtbGluZzEQMA4GA1UECxMHU2FtbGluZzCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAiYq25LEkXu3Zrc/n/OECYB02iSuwbrWhilbkt9I3Y0Oqm0wWE+OD6pUzSDz17tXjT7TAtO3kj17/N8GGdMzMaoRNbow85zAhr8SuBLHz5MvZqD49cbU8CYY7gUAVBHhKLRcigaeOlc3RtbKNKIg3ygKWjPjJJ5zfUYndTedelUcCAwEAAaOBtDCBsTAMBgNVHRMEBTADAQH/MAsGA1UdDwQEAwIC9DA7BgNVHSUENDAyBggrBgEFBQcDAQYIKwYBBQUHAwIGCCsGAQUFBwMDBggrBgEFBQcDBAYIKwYBBQUHAwgwEQYJYIZIAYb4QgEBBAQDAgD3MCUGA1UdEQQeMByGGmh0dHA6Ly9jYXByaXphLmNvbS9zYW1saW5nMB0GA1UdDgQWBBTmaNr/iZY94eqlTQSJEbk19FP+9TANBgkqhkiG9w0BAQUFAAOBgQBF6cKo/9fe5E5M4OGl2K5UAFU6ObBtnkxxQtIJDayyDOJLVU3qUDfp65g6b3StCWEOm+ID2muhIoKPZm8RY2YfJY1VkaXND+PNbzGZl/mf4IsO4B03kk3vbfCW+xPna1Z65U4oqJNLCut83NiAVE00qYcsVCdOayWzxkxKj/tUCg==-----END CERTIFICATE-----
# for israel moe
#onelogin.saml2.idp.x509cert =-----BEGIN CERTIFICATE-----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-----END CERTIFICATE-----

# Instead of use the whole x509cert you can use a fingerprint
# (openssl x509 -noout -fingerprint -in "idp.crt" to generate it,
# or add for example the -sha256 , -sha384 or -sha512 parameter)
#
# If a fingerprint is provided, then the certFingerprintAlgorithm is required in order to
# let the toolkit know which Algorithm was used. Possible values: sha1, sha256, sha384 or sha512
# 'sha1' is the default value.
 #onelogin.saml2.idp.certfingerprint = CD:86:37:2D:39:CE:18:B9:CC:73:E8:67:D5:70:4F:53:3F:F8:6C:81
 #onelogin.saml2.idp.certfingerprint_algorithm = sha1


## Security settings ##

# Indicates that the nameID of the <samlp:logoutRequest> sent by this SP
# will be encrypted.
onelogin.saml2.security.nameid_encrypted = false

# Indicates whether the <samlp:AuthnRequest> messages sent by this SP
# will be signed.              [The Metadata of the SP will offer this info]
onelogin.saml2.security.authnrequest_signed = false

# Indicates whether the <samlp:logoutRequest> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutrequest_signed = false

# Indicates whether the <samlp:logoutResponse> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutresponse_signed = false

# Sign the Metadata
# Empty means no signature, or comma separate the keyFileName and the certFileName
onelogin.saml2.security.want_messages_signed =

# Indicates a requirement for the <samlp:Response>, <samlp:LogoutRequest> and
# <samlp:LogoutResponse> elements received by this SP to be signed.
onelogin.saml2.security.want_assertions_signed = false

# Indicates a requirement for the Metadata of this SP to be signed.
# Right now supported null (in order to not sign) or true (sign using SP private key)
onelogin.saml2.security.sign_metadata =

# Indicates a requirement for the Assertions received by this SP to be encrypted
onelogin.saml2.security.want_assertions_encrypted = false

# Indicates a requirement for the NameID received by this SP to be encrypted
onelogin.saml2.security.want_nameid_encrypted = false

# Authentication context.
# Set Empty and no AuthContext will be sent in the AuthNRequest,
# Set comma separated values urn:oasis:names:tc:SAML:2.0:ac:classes:urn:oasis:names:tc:SAML:2.0:ac:classes:Password
onelogin.saml2.security.requested_authncontext = urn:oasis:names:tc:SAML:2.0:ac:classes:urn:oasis:names:tc:SAML:2.0:ac:classes:Password

# Allows the authn comparison parameter to be set, defaults to 'exact'
onelogin.saml2.security.onelogin.saml2.security.requested_authncontextcomparison = exact

# Indicates if the SP will validate all received xmls.
# (In order to validate the xml, 'strict' and 'wantXMLValidation' must be true).
onelogin.saml2.security.want_xml_validation = true

# Algorithm that the toolkit will use on signing process. Options:
#  'http://www.w3.org/2000/09/xmldsig#rsa-sha1'
#  'http://www.w3.org/2000/09/xmldsig#dsa-sha1'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha384'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha512'
onelogin.saml2.security.signature_algorithm = http://www.w3.org/2000/09/xmldsig#rsa-sha1

# Organization
onelogin.saml2.organization.name = Time To Know 
onelogin.saml2.organization.displayname = TimeToKnow test application
onelogin.saml2.organization.url = http://timetoknow.com
onelogin.saml2.organization.lang = en

# Contacts
onelogin.saml2.contacts.technical.given_name = support
onelogin.saml2.contacts.technical.email_address = support@timetoknow.com
onelogin.saml2.contacts.support.given_name = Support
onelogin.saml2.contacts.support.email_address = support@timetoknow.com